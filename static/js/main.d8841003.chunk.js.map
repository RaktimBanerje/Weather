{"version":3,"sources":["Component/DataParser.js","Component/CurrentConditions.js","Component/TodayDetailsItem.js","Component/TodayDetails.js","Component/WeatherTable.js","Component/SixHourForecast.js","Component/HourDisclosureHeader.js","Component/HourDisclosureBody.js","Component/HourDisclosure.js","Component/FourtyEightHourForecast.js","Component/HourlyWeatherModule.js","App.js","reportWebVitals.js","index.js"],"names":["getTime","timestamp","dt","Date","getHours","getMinutes","getDate","getMonth","getFullYear","getTemp","temp","Math","round","getFeels_like","feels_like","getIcon","id","icon","q","charAt","length","getPop","pop","getHumidity","humidity","getPressure","pressure","getVisibility","visibility","getUvi","uvi","getWind_speed","ws","getDew_point","dp","CurrentConditions","weather","description","date","time","iconClass","className","TodayDetailsItem","title","data","Card","Body","style","marginLeft","TodayDetails","dew_point","clouds","wind_speed","sunrise","wind_deg","sunset","TodayDetailsList","Row","map","item","idx","Col","md","WeatherTable","subtemp","SixHourForecast","props","sixHourData","Object","values","slice","hour","rain","main","lg","HourDisclosureHeader","width","color","fontSize","HourDisclosureBody","HourDisclosure","Accordion","Item","eventKey","Header","FourtyEightHourForecast","hours","key","HourlyWeatherModule","useState","toggle","setToggle","Footer","Button","variant","onClick","App","lat","lon","coords","setCoords","setWeather","useEffect","navigator","geolocation","getCurrentPosition","position","latitude","longitude","alert","a","url","fetch","res","json","console","log","Container","fluid","Fragment","current","hourly","height","role","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8841003.chunk.js","sourcesContent":["export function getTime(timestamp){\r\n\tconst dt = new Date(timestamp * 1000)\r\n\tconst time = `${dt.getHours()}:${dt.getMinutes()}`\t\r\n\treturn time\r\n}\r\n\r\nexport function getDate(timestamp){\r\n\tconst dt = new Date(timestamp * 1000)\r\n\tconst fullDate = `${dt.getDate()}/${dt.getMonth() + 1}/${dt.getFullYear()}`\t\r\n\treturn fullDate\r\n}\r\n\r\nexport function getTemp(temp){\r\n\treturn `${Math.round(temp)}°`\r\n}\r\n\r\nexport function getFeels_like(feels_like){\r\n\treturn `${Math.round(feels_like)}°`\r\n}\r\n\r\nexport function getIcon(id, icon){\r\n\tconst q = icon.charAt(icon.length-1) === \"d\" ? \"day\" : \"night\"\r\n\tconst i = `wi wi-owm-${q}-${id}`\r\n\treturn i\r\n}\r\n\r\nexport function getPop(pop){\r\n\treturn `${pop * 100}%`\r\n}\r\n\r\nexport function getHumidity(humidity){\r\n\treturn `${humidity}%`\r\n}\r\n\r\nexport function getPressure(pressure){\r\n\treturn `${pressure} mb`\r\n}\r\n\r\nexport function getVisibility(visibility){\r\n\treturn `${visibility / 1000} km`\r\n}\r\n\r\nexport function getUvi(uvi){\r\n\treturn `${uvi} of 10`\r\n}\r\n\r\nexport function getWind_speed(ws){\r\n\treturn `${ws} km/h`\r\n}\r\n\r\nexport function getDew_point(dp){\r\n\treturn `${Math.round(dp)}°`\r\n}","import React from 'react'\r\n\r\nimport {getDate, getTime, getTemp, getIcon} from './DataParser'\r\n\r\nconst CurrentConditions = ({temp, weather, dt})=>{\r\n\tconst {id, description, icon} = weather[0]\r\n\tvar name = \"Howrah\"\r\n\tvar country = \"IN\"\r\n\t\r\n\tvar date = getDate(dt)\r\n\tvar time = getTime(dt)\r\n\tvar temp = getTemp(temp)\r\n\tvar iconClass = getIcon(id, icon)\r\n\r\n\treturn(\r\n\t\t<div className=\"CurrentConditions p-4\">\r\n\t\t\t<div className=\"CurrentConditions-header\">\r\n\t\t\t\t<div className=\"CurrentConditions-location\">\r\n\t\t\t\t\t<h5>{name}, {country}</h5>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"CurrentConditions-timestamp\">\r\n\t\t\t\t\t<h6>As of {date} {time}</h6>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"CurrentConditions-dataWrapper d-flex justify-content-between\">\r\n\t\t\t\t<div className=\"CurrentConditions-primary\">\r\n\t\t\t\t\t<div className=\"CurrentConditions-temparature\">{temp}</div>\r\n\t\t\t\t\t<div className=\"CurrentConditions-phraseValue\">\r\n\t\t\t\t\t\t<h4 className=\"text-light\">{description}</h4>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"CurrentConditions-secondary\">\r\n\t\t\t\t\t<i className={`CurrentConditions-phraseIcon ${iconClass}`}></i>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n} \r\n\r\nexport default CurrentConditions","import React from 'react'\r\n\r\nimport { Card } from 'react-bootstrap'\r\n\r\nconst TodayDetailsItem = ({icon, title, data}) => {\r\n\treturn(\r\n\t\t<Card className=\"Item mt-md-2\">\r\n\t\t\t<Card.Body className=\"d-flex\">\r\n\t\t\t\t<i className={icon}></i>\r\n\t\t\t\t<span>{title}</span>\r\n\t\t\t\t<span style={{marginLeft: 'auto'}}>{data}</span>\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\t\r\n\t)\r\n}\r\n\r\nexport default TodayDetailsItem","import React from 'react'\r\n\r\nimport { Row, Col } from 'react-bootstrap' \r\n\r\nimport { getTime, getHumidity, getPressure, getVisibility, getUvi, getWind_speed, getDew_point, getFeels_like } from './DataParser'\r\n\r\nimport TodayDetailsItem from './TodayDetailsItem'\r\n\r\nconst TodayDetails = ({\r\n\tfeels_like, \r\n\tpressure, \r\n\thumidity, \r\n\tdew_point, \r\n\tuvi, \r\n\tclouds, \r\n\tvisibility, \r\n\twind_speed, \r\n\twind_deg, \r\n\tsunrise, \r\n\tsunset\r\n}) => {\r\n\tconst name = \"Howrah\"\r\n\tconst country = \"IN\"\r\n\tfeels_like = getFeels_like(feels_like)\r\n\thumidity = getHumidity(humidity)\r\n\tpressure = getPressure(pressure)\r\n\tvisibility = getVisibility(visibility)\r\n\tuvi = getUvi(uvi)\t\r\n\twind_speed = getWind_speed(wind_speed)\r\n\tdew_point = getDew_point(dew_point)\r\n\tsunrise = getTime(sunrise)\r\n\tsunset = getTime(sunset)\r\n\r\n\tconst TodayDetailsList = [\r\n\t\t{ icon: \"wi wi-humidity\", title: \"Humidity\", data: humidity},\r\n\t\t{ icon: \"\", title: \"Visibility\", data: visibility },\r\n\t\t{ icon: \"wi wi-strong-wind\", title: \"Wind\", data: wind_speed },\r\n\t\t{ icon: \"wi wi-solar-eclipse\", title: \"UV Index\" , data: uvi },\r\n\t\t{ icon: \"wi wi-barometer\", title: \"Pressure\" , data: pressure },\r\n\t\t{ icon: \"\", title: \"Dew Point\" , data: dew_point },\r\n\t\t{ icon: \"wi wi-sunrise\", title: \"Sunrise\", data: sunrise },\r\n\t\t{ icon: \"wi wi-sunset\", title: \"Sunset\", data: sunset }\r\n\t]\r\n\r\n\treturn(\r\n\t\t<div className=\"TodayDetails p-4\">\r\n\t\t\t<div>\r\n\t\t\t\t<h5 className=\"text-light\">Weather Today in {name}, {country}</h5>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<h1 className=\"text-light\">{feels_like}</h1>\r\n\t\t\t\t<h6 className=\"text-light\">Feels Like</h6>\r\n\t\t\t</div>\r\n\t\t\t<Row>\r\n\t\t\t\t{\r\n\t\t\t\t\tTodayDetailsList.map((item, idx) =>( \r\n\t\t\t\t\t\t<Col md={6} key={idx}>\r\n\t\t\t\t\t\t\t<TodayDetailsItem {...item} />\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</Row>\r\n\t\t</div>\r\n\t)\t\r\n}\r\n\r\nexport default TodayDetails","import React from 'react'\r\n\r\nconst WeatherTable = (({time, temp, subtemp, iconClass, pop}) => {\r\n\treturn(\r\n\t\t<div className=\"WeatherTable\">\r\n\t\t\t<h6>{time}</h6>\r\n\t\t\t<h1 className=\"WeatherTable-Temp\">{temp}</h1>\r\n\t\t\t{ subtemp &&  <p>{subtemp}</p>}\r\n\t\t\t<i className={`WeatherTable-Icon ${iconClass}`}></i>\r\n\t\t\t<h5>{pop}</h5>\r\n\t\t</div>\r\n\t)\r\n})\r\n\r\nexport default WeatherTable","import React from 'react';\r\n\r\nimport {getTime, getTemp, getIcon, getPop} from './DataParser'\r\n\r\nimport { Row, Col } from 'react-bootstrap'\r\n\r\nimport WeatherTable from './WeatherTable'\r\n \r\nconst SixHourForecast = props => {\r\n\tconst sixHourData = Object.values(props).slice(0, 6)\r\n    return (\r\n      \t<Row className=\"justify-content-center\">\r\n\t        \t{\r\n\t\t\t\t\tsixHourData.map((hour, idx) => {\r\n\t\t\t\t\t\tvar {dt, temp, weather, rain, pop} = hour\r\n\t\t\t\t\t\tvar {id, main, icon} = weather[0]\r\n\r\n\t\t\t\t\t\tvar time = getTime(dt)\r\n\t\t\t\t\t\tvar temp = getTemp(temp)\r\n\t\t\t\t\t\tvar iconClass = getIcon(id, icon)\r\n\t\t\t\t\t\tvar pop = getPop(pop)\r\n\r\n\t\t        \t\treturn (\r\n\t\t\t        \t\t<Col md={4} lg={2} key={idx}>\r\n\t\t\t        \t\t\t<WeatherTable \r\n\t\t\t\t        \t\t\ttime={time} \r\n\t\t\t\t        \t\t\ttemp={temp}\r\n\t\t\t\t        \t\t\ticonClass={iconClass} \r\n\t\t\t\t        \t\t\tpop={pop}\r\n\t\t\t        \t\t\t/> \r\n\t\t\t        \t\t</Col>\t\t\t\t\t\t\t\r\n\t\t\t        \t)\r\n\t\t\t\t\t})\t        \t\t\r\n\t        \t}\r\n       \t</Row>\r\n    )\r\n}\r\n\r\nexport default SixHourForecast\r\n","import React from 'react'\r\nimport { \r\n\tgetDate, \r\n\tgetTime, \r\n\tgetTemp, \r\n\tgetFeels_like, \r\n\tgetIcon, \r\n\tgetPop \r\n} from './DataParser'\r\nimport { Row, Col } from 'react-bootstrap'\r\n\r\nconst HourDisclosureHeader = props => {\r\n\tvar {id, icon} = props.weather[0]\r\n\r\n\tvar date = getDate(props.dt)\r\n\tvar time = getTime(props.dt)\r\n\tvar temp = getTemp(props.temp)\r\n\tvar feels_like = getFeels_like(props.feels_like)\r\n\tvar iconClass = getIcon(id, icon)\r\n\tvar pop = getPop(props.pop)\r\n\r\n\treturn(\r\n\t\t<Row style={{width: \"100%\"}}>\r\n\t\t\t<Col className=\"fs-6\">{date} {time}</Col>\r\n\t\t\t<Col className=\"fs-2\" style={{color: \"#1b4ddf\"}}>{temp}</Col>\r\n\t\t\t<Col className=\"disclosure-header-icon\"> \r\n\t\t\t\t<i style={{fontSize: \"2rem\"}} className={iconClass}></i>\r\n\t\t\t</Col>\r\n\t\t\t<Col className=\"disclosure-header-pop\">{pop}</Col>\r\n\t\t</Row>\r\n\t)\r\n}\r\n\r\nexport default HourDisclosureHeader","import React from 'react'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport { \r\n\tgetHumidity, \r\n\tgetPressure, \r\n\tgetVisibility, \r\n\tgetUvi, \r\n\tgetWind_speed, \r\n\tgetDew_point \r\n} from './DataParser'\r\nimport TodayDetailsItem from './TodayDetailsItem'\r\n\r\nconst HourDisclosureBody = props => {\r\n\tlet {humidity, pressure, visibility, uvi, wind_speed, dew_point} = props\r\n\r\n\thumidity = getHumidity(humidity)\r\n\tpressure = getPressure(pressure)\r\n\tvisibility = getVisibility(visibility)\r\n\tuvi = getUvi(uvi)\t\r\n\twind_speed = getWind_speed(wind_speed)\r\n\tdew_point = getDew_point(dew_point)\r\n\r\n\tconst TodayDetailsList = [\r\n\t\t{ icon: \"wi wi-humidity\", title: \"Humidity\", data: humidity},\r\n\t\t{ icon: \"wi wi-barometer\", title: \"Pressure\" , data: pressure },\r\n\t\t{ icon: \"\", title: \"Visibility\", data: visibility },\r\n\t\t{ icon: \"wi wi-strong-wind\", title: \"Wind\", data: wind_speed },\r\n\t\t{ icon: \"wi wi-solar-eclipse\", title: \"UV Index\" , data: uvi },\r\n\t\t{ icon: \"\", title: \"Dew Point\" , data: dew_point },\r\n\t]\r\n\t\r\n\treturn (\r\n\t\t<Row>\r\n\t\t\t{\r\n\t\t\t\tTodayDetailsList.map((item, idx) =>( \r\n\t\t\t\t\t<Col md={6} key={idx} className=\"HourDisclosure\">\r\n\t\t\t\t\t\t<TodayDetailsItem {...item} />\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t))\r\n\t\t\t}\r\n\t\t</Row>\r\n\t)\r\n}\r\n\r\nexport default HourDisclosureBody","import React from 'react'\r\n\r\nimport { Accordion } from 'react-bootstrap'\r\n\r\nimport HourDisclosureHeader from './HourDisclosureHeader'\r\nimport HourDisclosureBody from './HourDisclosureBody'\r\n\r\nconst HourDisclosure = ({id, ...hour}) => {\r\n\treturn(\r\n\t\t<Accordion.Item eventKey={id}>\r\n\t\t\t<Accordion.Header>\r\n\t\t\t\t<HourDisclosureHeader {...hour} />\r\n\t\t\t</Accordion.Header>\r\n\r\n\t\t\t<Accordion.Body>\r\n\t\t\t\t<HourDisclosureBody {...hour} />\t\t\t\t\r\n\t\t\t</Accordion.Body>\r\n\t\t</Accordion.Item>\r\n\t)\r\n}\r\n\r\nexport default HourDisclosure","import React from 'react';\r\n\r\nimport { Row, Accordion } from 'react-bootstrap'\r\n\r\nimport HourDisclosure from './HourDisclosure'\r\nconst FourtyEightHourForecast = props => {\r\n    const hours = Object.values(props)\r\n    return (\r\n    \t<Row className=\"justify-content-center\">\r\n    \t\t<Accordion>\r\n\t    \t\t{\r\n\t    \t\t\thours.map((hour, idx) =>\r\n\t    \t\t\t\t<HourDisclosure  id={idx} {...hour} key={idx}/>\r\n\t    \t\t\t)\r\n\t    \t\t}\r\n    \t\t</Accordion>\r\n    \t</Row>\r\n    )\r\n}\r\n\r\nexport default FourtyEightHourForecast\r\n","import React, { useState } from 'react'\r\nimport { Button, Card } from 'react-bootstrap'\r\nimport SixHourForecast from './SixHourForecast'\r\nimport FourtyEightHourForecast from './FourtyEightHourForecast'\r\n\r\nconst HourlyWeatherModule = props => {\r\n\r\n\tconst [toggle, setToggle] = useState(false)\r\n\r\n\treturn (\r\n\t\t<Card> \r\n\t\t\t<Card.Header>\r\n\t\t\t\t<h4>\r\n\t\t\t\t\tHourly Foreacst\r\n\t\t\t\t</h4>\r\n\t\t\t</Card.Header>\r\n\t\t\t\t\r\n\t\t\t<Card.Body>\r\n\t\t\t\t{\t\r\n\t\t\t\t\ttoggle? <FourtyEightHourForecast {...props} /> : <SixHourForecast {...props} />\r\n\t\t\t\t}\r\n\t\t\t</Card.Body>\r\n\r\n\t\t\t<Card.Footer>\r\n\t\t\t\t<Button variant=\"primary\" onClick={ ()=>setToggle(!toggle) }>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t!toggle ? \"Next 48 Hour\" : \"Next 6 Hour\" \r\n\t\t\t\t\t}\r\n\t\t\t\t</Button>\r\n\t\t\t</Card.Footer>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nexport default HourlyWeatherModule","import React, { useState, useEffect } from 'react'\n\nimport './css/App.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './css/weather-icons.min.css'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nimport CurrentConditions from './Component/CurrentConditions'\nimport TodayDetails from './Component/TodayDetails'\nimport HourlyWeatherModule from './Component/HourlyWeatherModule'\n\nconst App = ()=>{\n  const [coords, setCoords] = useState( {lat: '', lon: ''} )\n  const [weather, setWeather] = useState(null)\n\n  useEffect(()=>getCoords(),[])\n\n  useEffect(()=>{\n    (async ()=>{\n        if(coords.lat !== '' && coords.lon !== ''){\n          const {lat, lon} = coords\n          const unit = 'metric'\n          const apiKey = 'fdaa2d3510968dd2eab5b8328b64944b'\n          const url = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&units=${unit}&appid=${apiKey}`\n          const res = await fetch(url)\n          const data = await res.json()\n          setWeather(data)\n        }\n      }\n    )()\n  }, [coords])  \n\n  useEffect(()=>{\n     console.log(weather)\n  }, [weather])\n\n  function getCoords(){\n    if (navigator.geolocation) \n      navigator.geolocation.getCurrentPosition(position => setCoords({lat: position.coords.latitude, lon: position.coords.longitude })) \n    else\n     alert(\"Sorry, your browser is too old.\")\n  }\n\n  return( \n     <Container fluid>\n       {\n         weather?\n          <React.Fragment>\n            <Row className=\"align-items-center\">\n              <Col className=\"my-2\" md={6}>\n                <CurrentConditions {...weather.current} />\n              </Col>\n              <Col className=\"my-2\" md={6}>\n                <TodayDetails {...weather.current} />\n              </Col>\n            </Row>\n            <Row>\n              <Col className=\"my-2 offset-lg-1\" lg={10}>\n                <HourlyWeatherModule {...weather.hourly} />\n              </Col>           \n            </Row>      \n          </React.Fragment>\n          :\n          <Row className=\"justify-content-center align-items-center\" style={{height: '100vh'}}>\n            <div className=\"spinner-border text-light\" role=\"status\" style={{width: '4rem', height: '4em'}}>\n              <span className=\"visually-hidden\">Loading...</span>\n            </div>\n          </Row>\n       }\n     </Container>\n   )\n}\n\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}